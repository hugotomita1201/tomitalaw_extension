# DS-160 Combined Prompt v5.5 - Enhanced Formatting + Schema Updates
# Extract DS-160 visa application data into structured JSON format

Extract complete DS-160 information from provided documents and output as structured JSON.
For E-1/E-2 visas, also extract specialized E-visa sections from DS-156E form.

## VISA RENEWAL SCENARIOS:

When processing visa renewal applications with multiple documents:

1. **Document Identification**:
   - ORIGINAL DS-160: Complete previous application data
   - RENEWAL WORKSHEET: Contains only updated/changed information
   - ADDITIONAL DOCUMENTS: New support letters, updated petitions, revised employment docs

2. **Processing Rules - Field Update Logic**:
   - Start with original DS-160 as base template
   - **Single-value fields**: REPLACE with renewal worksheet value
     * Examples: passport, address, salary, presentEmployer, phone numbers
   - **Array fields**: APPEND to original (preserve + add new)
     * previousEmployers: Keep old employers, add new from renewal
     * visits: Keep old US visits, add new visits from renewal
     * additionalEmails/otherPhones: Keep old, add new
     * education.institutions: Usually complete in original, but append if new schools added
   - **Boolean fields**: Use newest value from renewal worksheet
   - Extract new information from additional documents (petition numbers, employer details, etc.)

3. **Critical Updates to Prioritize**:
   - Previous US travel: Use most recent visa information
   - Employment changes:
     * Move old DS-160's presentEmployer → previousEmployers array
     * Extract new presentEmployer from renewal worksheet/documents
     * Preserve any previousEmployers from old DS-160 (append, don't replace)
     * Sort previousEmployers chronologically (oldest first)
   - Petition numbers: Use newest petition/receipt numbers from documents
   - Contact information: Update all addresses/phones/emails if changed

4. **Intra-Company Transfer Detection** (applies to all visa types):
   - If old DS-160's presentEmployer has non-US country (JPN, GBR, etc.):
     * Move that foreign employer → previousEmployers array
     * Find US employer from: temporaryWork, renewal worksheet, or support documents
     * Extract US employer → presentEmployer object
   - Common for: L-1, E-2, H-1B, O-1 (any transfer from foreign office to US office)
   - Foreign employer sources: evisaApplicantPosition (E-visa), old presentEmployer, support letters

5. **IMPORTANT**: Follow the field update logic in Section 2 - REPLACE single-value fields, APPEND array fields, use newest boolean values.

## CRITICAL FORMATTING RULES:

1. **Company/Organization Names**:
   - LETTERS AND SPACES ONLY
   - NO punctuation: Remove all periods, commas, parentheses, apostrophes
   - Example: "ABC COMPANY INC" not "A.B.C. Company, Inc."
   - Example: "NISSIN FOODS USA CO INC" not "NISSIN FOODS (U.S.A.) CO., INC."

2. **Phone Numbers**:
   - Remove all dashes, spaces, and parentheses for all numbers
   - **US numbers**: Include `1` country code, NO `+` sign (e.g., `13107835484` not `3107835484` or `+13107835484`)
   - **Japanese numbers**: Include `+81`, drop leading `0` from prefix (e.g., `090-1234-5678` → `+819012345678`)
   - **All other countries**: Include `+` with country code, follow country-specific international dialing rules

3. **Postal Codes**:
   - Normal formatting allowed (can have dashes)
   - Example: "532-0011" or "90249-1234" are both OK

4. **Street Address Format**:
   - Building/house number MUST come FIRST, then street name
   - Correct: "3-14-7 Shibuya", "123 Main Street"
   - Wrong: "Shibuya 3-14-7", "Main Street 123"
   - Japanese addresses: Use romaji with number first format

4.5. **U.S. Street Address Abbreviations**:
   - Use standard abbreviations with periods for ALL U.S. addresses

   **Directional Abbreviations**:
   - North → N.
   - South → S.
   - West → W.
   - East → E.

   **Street Type Abbreviations**:
   - Avenue → Ave.
   - Boulevard → Blvd.
   - Street → St.
   - Road → Rd.
   - Lane → Ln.
   - Highway → Hwy.
   - Circle → Cir.

   **State Names**:
   - Spell out state name in FULL (do not abbreviate)
   - Examples: California (not CA), New York (not NY), Texas (not TX)

   **Complete Example**:
   - Input: "11835 West Olympic Boulevard, Suite 355E, Los Angeles, CA 90064"
   - Output: "11835 W. Olympic Blvd.", "STE.355E", "Los Angeles", "California", "90064"

5. **Secondary Unit Designators (USPS Standard)**:
   - Use USPS standard abbreviations with period, NO space before number
   - Format: `ABBREVIATION.NUMBER` (e.g., APT.701, STE.355E)
   - Common designators:
     - Apartment → APT.701
     - Suite → STE.355E
     - Unit → UNIT.5
     - Building → BLDG.A
     - Floor → FL.20
     - Room → RM.302
     - Office → OFC.100
     - Penthouse → PH.1
     - Space → SPC.15
     - Department → DEPT.5
   - Additional: Basement → BSMT., Lobby → LBBY., Trailer → TRLR., Front → FRNT., Rear → REAR., Upper → UPPR., Lower → LOWR., Side → SIDE., Slip → SLIP., Pier → PIER., Stop → STOP., Hangar → HNGR., Key → KEY., Lot → LOT.
   - Japanese unit numbers: "701号室" → APT.701, "502号" → APT.502

6. **Japanese Address Formatting (English/Romaji)**:
   - DS-160 uses English/romaji for all non-US addresses
   - Street number MUST come first (e.g., "2-11-5 Nishitenma")
   - Include hyphens in postal codes (e.g., "530-8543")

   **Administrative Suffixes:**
   - **Remove from City/State fields ONLY:**
     - City: Remove "-shi" (e.g., "Osaka-shi" → "Osaka")
     - Prefecture: Remove "-ken/-fu/-to" (e.g., "Osaka-fu" → "Osaka", "Tokyo-to" → "Tokyo")
     - Exception: "Hokkaido" stays "Hokkaido" (no suffix)

   - **KEEP in Street Address:**
     - Ward: "-ku" (e.g., "Kita-ku")
     - Town: "-cho" or "-machi" (e.g., "Nishitenma")
     - County: "-gun" (e.g., "Seta-gun")

   **Building/Apartment Handling:**
   - Building name → Move to apartment field (APT. format)
   - Do NOT include building name in street address

   **Format Structure:**
   - homeStreet: "[number-number-number] [street name], [ward/district]"
   - homeApt: "APT.[room number]" (if building has unit number)
   - homeCity: "[city name without -shi]"
   - homeState: "[prefecture without -ken/-fu/-to]"
   - homePostalCode: "[xxx-xxxx with hyphen]"

   **Example 1:**
   Source: 〒530-8543 Osaka-fu, Osaka-shi, Kita-ku, Nishitenma 2-11-5 U.S. General Consulate Building

   Output:
   - homeStreet: "2-11-5 NISHITENMA, KITA-KU"
   - homeApt: (omit - consulate building, not residential apartment)
   - homeCity: "OSAKA"
   - homeState: "OSAKA"
   - homePostalCode: "530-8543"
   - homeCountry: "JPN"

   **Example 2:**
   Source: 〒064-0821 Hokkaido, Sapporo-shi, Chuo-ku, Kita 1-jo Nishi 28-chome

   Output:
   - homeStreet: "KITA 1-JO NISHI 28-CHOME, CHUO-KU"
   - homeApt: (omit if no unit number)
   - homeCity: "SAPPORO"
   - homeState: "HOKKAIDO"
   - homePostalCode: "064-0821"
   - homeCountry: "JPN"

7. **Spouse Maiden Name Format**:
   - If spouse has a maiden name, include it in surname field with parentheses
   - Format: `CURRENT_NAME MAIDEN NAME PREVIOUS_NAME`
   - Example: "YAMAMOTO MAIDEN NAME TANAKA"
   - Only applies if maiden name/previous name information is available in source documents

8. **Passport Issuance Location**:
   - All 3 fields must be filled: issueCity, issueState, issueCountry

   **If passport states "Ministry of Foreign Affairs":**
   - issueCity: "Tokyo"
   - issueState: "Tokyo"
   - issueCountry: "JPN"
   - (Ministry of Foreign Affairs indicates passport was issued in Tokyo)

   **If issued by Japanese embassy/consulate abroad:**
   - Use the exact location stated in the passport
   - issueCity: [City of embassy] (e.g., "Los Angeles", "London")
   - issueState: [State/Province if applicable] (e.g., "California", "Ontario")
   - issueCountry: [Country code] (e.g., "USA", "GBR")
   - Example: "Embassy of Japan in Los Angeles" → issueCity: "Los Angeles", issueState: "California", issueCountry: "USA"

   **Non-Japanese passports:**
   - Use location exactly as stated in passport

9. **Chronological Ordering (History Sections)**:
   - All history sections must be sorted chronologically, OLDEST FIRST

   **Travel History (previousTravel.visits):**
   - Sort by arrival date, oldest trip first
   - Example: 2020 trip → 2021 trip → 2023 trip

   **Employment History (previousEmployers):**
   - Sort by start date, oldest job first
   - Example: Job from 2015-2018 → Job from 2019-2023

   **Educational History (education.institutions):**
   - Sort by start date, oldest school first
   - Start from junior high school → high school → college → graduate school
   - **Study Abroad Exception**: If there was a study abroad period during enrollment at another institution:
     * Sort by End Date (toDate field)
     * Place study abroad school BEFORE the main degree school if study abroad ended earlier
     * Example: University enrollment 2016-2020, Study abroad 2018-2019
       - Correct order: Study Abroad (ended 2019) → University (ended 2020)
   - Include ALL institutions: junior high, high school, vocational schools, universities, graduate schools

## OUTPUT INSTRUCTIONS:

1. Output ONLY the complete JSON structure - no explanations or analysis
2. Format as a proper JSON code block using ```json
3. Ensure valid JSON syntax (proper quotes, commas, brackets)
4. Do not include any text before or after the JSON block

## JSON FORMAT:

```json
{
  "personal": {
    "surname": "string",
    "givenName": "string",
    "fullNameNative": "string or omit",
    "otherNames": [],  // Array: {surname: "", givenName: ""}
    "gender": "MALE/FEMALE - infer from given name if not explicitly stated",
    "maritalStatus": "SINGLE/MARRIED/DIVORCED/WIDOWED/SEPARATED - infer from spouse information if present",
    "dateOfBirth": "DD-MMM-YYYY or omit if not in documents",
    "birthCity": "string",
    "birthState": "string or omit",
    "birthCountry": "3-letter country code",
    "nationality": "3-letter country code",
    "otherNationalities": [],  // Array of 3-letter country codes
    "permanentResident": false,
    "permanentResidentExplanation": "string if permanentResident is true",
    "nationalId": "string or omit",
    "usSocialSecurity": "string or omit",
    "usTaxId": "string or omit"
  },

  "travel": {
    "purposeOfTrip": "B, F, H, J, A, E, etc.",
    "otherPurposeDetail": "string (e.g., 'H-1B', 'L-1', 'E-2', 'E2-EX', 'E2-SP', 'E2-CH', 'E1-EX')",
    "purposeSpecify": "string for Government officials",
    "petitionNumber": "string - Required here AND in temporaryWork section",
    "principalApplicant": {
      "surname": "string",
      "givenName": "string",
      "petitionNumber": "string",
      "companyName": "string (for E-visa spouse/child only)"
    },
    "principalVisaIssued": "true/false - For E2-EX/E1-EX: Has the principal treaty investor already been issued a visa?",
    "evisaPrincipal": {  // Object - Only fill if principalVisaIssued = true
      // CRITICAL: Enter person who MOST RECENTLY obtained an E visa
      // - Visa must be ISSUED (physically in passport), not just interviewed
      // - Person doesn't need to have traveled to US yet
      // - If multiple E visa holders exist, use the one with latest visa issue date
      "surname": "string - Principal treaty investor's surname from DS-156E Section 15",
      "givenName": "string - Principal treaty investor's given name from DS-156E Section 15",
      "dateOfBirth": "DD-MMM-YYYY - Principal's DOB if available, omit if not found"
    },
    "specificTravelPlans": "true/false - set true ONLY if documents provide detailed itinerary with actual flight numbers/dates",
    "intendedArrivalDate": "DD-MMM-YYYY - use actual date from documents; if no date provided AND specificTravelPlans is false, use placeholder: 01-JAN-2026",
    "arrivalFlightNumber": "string",
    "arrivalCity": "string",
    "intendedDepartureDate": "DD-MMM-YYYY - calculate from intendedArrivalDate + lengthOfStay if not provided",
    "departureFlightNumber": "string",
    "departureCity": "string",
    "lengthOfStay": "string",
    "lengthOfStayNumber": "string - Use this precedence: 1) Exact value from documents if specified, 2) Infer from visa type if not specified: tourist=3-4 weeks, business=1-2 weeks, work visas=3 years, 3) If unable to infer, use placeholder: 3",
    "lengthOfStayUnit": "Y/M/W/D - default to Y for work visas, W for business/tourist, infer from context",
    "usStreetAddress": "string",
    "usStreetAddress2": "string",
    "usCity": "string",
    "usState": "2-letter state code",
    "usZipCode": "string",
    "tripPayer": "SELF/COMPANY/PRESENT_EMPLOYER/OTHER_PERSON/OTHER_COMPANY - Default logic if not specified: work visas (H/L/E/O)=PRESENT_EMPLOYER, tourist/business (B)=SELF, student (F/M)=SELF",
    "payerInfo": {  // Object - Include if tripPayer is OTHER_PERSON
      "surname": "string or omit",
      "givenName": "string or omit",
      "phone": "string or omit - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
      "email": "string or omit",
      "relationship": "string or omit",
      "sameAddress": true,
      "street1": "string or omit",
      "street2": "string or omit",
      "city": "string or omit",
      "state": "string or omit",
      "postalCode": "string or omit",
      "country": "string or omit"
    },
    "companyInfo": {  // Object - Include if tripPayer is COMPANY or OTHER_COMPANY
      "name": "string or omit",
      "relationship": "string or omit",
      "street1": "string or omit",
      "street2": "string or omit",
      "city": "string or omit",
      "state": "string or omit",
      "zipCode": "string or omit",
      "country": "string or omit"
    }
  },

  "travelCompanions": [],  // Array: {surname: "", givenName: "", relationship: ""}

  "travelGroup": {
    "traveling": false,
    "name": "string or omit"
  },

  "previousTravel": {
    "hasBeenToUS": false,
    "visits": [],  // Array: {arrivalDate: "DD-MMM-YYYY", lengthOfStayNumber: "14", lengthOfStayUnit: "D/W/M/Y"} - CRITICAL: Extract ALL previous US visits from worksheet. Sort by arrival date OLDEST FIRST (e.g., 2020 → 2021 → 2023). See Section 9 for details
    "driverLicense": {
      "hasLicense": false,
      "licenses": []  // Array: {state: "2-letter code", number: "string (w/ only letters/digits, no dashes)"} - Extract ALL driver's licenses from worksheet (multiple states)
    },
    "previousVisa": {
      "hasVisa": false,
      "issueDate": "DD-MMM-YYYY or N/A",
      "visaNumber": "string or omit",
      "sameType": false,
      "sameCountry": true,
      "tenPrinted": false,
      "lost": false,
      "lostExplanation": "string or omit",
      "cancelled": false,
      "cancelledExplanation": "string or omit"
    },
    "visaRefused": false,
    "visaRefusedExplanation": "string if true",
    "estaDenied": false,
    "estaDeniedExplanation": "string if true",
    "immigrantPetition": false,
    "immigrantPetitionExplanation": "string if true"
  },

  "contact": {
    "homeStreet": "string",
    "homeApt": "string",
    "homeCity": "string",
    "homeState": "string",
    "homePostalCode": "string",
    "homeCountry": "3-letter country code",
    "mailingAddressSameAsHome": true,
    "mailingAddress": {  // Object - Include if mailingAddressSameAsHome is false
      "street": "string or omit",
      "apt": "string or omit",
      "city": "string or omit",
      "state": "string or omit",
      "postalCode": "string or omit",
      "country": "3-letter country code"
    },
    "homePhone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
    "secondaryPhone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
    "workPhone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
    "email": "string",
    "socialMedia": [],  // Array: {platform: "FACEBOOK/TWITTER/etc", handle: "username"} - Extract ALL social media accounts from worksheet
    "additionalEmails": [],  // Array of email strings - Extract ALL additional emails from worksheet
      // CRITICAL FOR RENEWALS: Include primary email from old DS-160 as additional email
      // (Old primary email becomes "other email used in past 5 years" in renewal)
    "otherPhones": []  // Array of phone number strings - Extract ALL other phone numbers from worksheet
      // CRITICAL FOR RENEWALS: Include primary phone from old DS-160 as other phone
      // (Old primary phone becomes "other phone used in past 5 years" in renewal)
      // Format: No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code
  },

  "usContact": {
    "contactPerson": {
      "surname": "string",
      "givenName": "string"
    },
    "organizationName": "string",
    "relationship": "string",
    "address": {
      "street1": "string or omit",
      "street2": "string or omit",
      "city": "string or omit",
      "state": "string or omit",
      "zipCode": "string or omit"
    },
    "phone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
    "email": "string"
  },

  "passport": {
    "type": "REGULAR, OFFICIAL, DIPLOMATIC, or OTHER",
    "otherTypeExplanation": "string - Required if passport type is OTHER, omit otherwise",
    "number": "string or omit if not in documents",
    "bookNumber": "string",
    "issuingAuthority": "3-letter country code - passport holder's nationality (JPN, USA, GBR, etc.)",
    "issueCountry": "3-letter country code - WHERE passport was physically issued",
    "issueCity": "string - city where issued (use 'Tokyo' for Japanese Ministry of Foreign Affairs)",
    "issueState": "string - state/prefecture where issued (use 'Tokyo' for Japanese Ministry of Foreign Affairs)",
    "issueDate": "DD-MMM-YYYY or omit if not in documents",
    "expirationDate": "DD-MMM-YYYY or omit if not in documents",
    "lostPassport": {
      "hasLost": false,
      "number": "string or omit",
      "country": "string or omit",
      "explanation": "string or omit"
    }
  },

  "family": {
    "father": {
      "surname": "string or omit",
      "givenName": "string or omit",
      "dateOfBirth": "DD-MMM-YYYY or N/A",
      "inUS": false,
      "status": "string or omit"
    },
    "mother": {
      "surname": "string or omit",
      "givenName": "string or omit",
      "dateOfBirth": "DD-MMM-YYYY or N/A",
      "inUS": false,
      "status": "string or omit"
    },
    "relativesInUS": [],  // Array: {surname: "", givenName: "", relationship: "", status: ""} - Extract ALL relatives in US from worksheet
    "spouse": {  // Object - Include if maritalStatus is MARRIED
      "surname": "string or omit - If maiden name known, format as: CURRENT_NAME MAIDEN NAME PREVIOUS_NAME",
      "givenName": "string or omit",
      "dateOfBirth": "DD-MMM-YYYY or N/A",
      "nationality": "string or omit - 3-letter country code",
      "city": "string or omit - Place of birth city",
      "birthState": "string or omit - Place of birth state/province (if applicable)",
      "country": "string or omit - Place of birth country (3-letter code)",
      "addressType": "SAME_AS_HOME, SAME_AS_MAILING, SAME_AS_US_CONTACT, DO_NOT_KNOW, or OTHER",
      "address": {  // Object - Only include if addressType is OTHER
        "street1": "string",
        "street2": "string or omit",
        "city": "string",
        "state": "string or omit",
        "postalCode": "string or omit",
        "country": "3-letter country code"
      }
    }
  },

  "workEducation": {
    "primaryOccupation": "AGRICULTURE/BUSINESS/COMPUTER SCIENCE/EDUCATION/GOVERNMENT/HOMEMAKER/MEDICAL/MILITARY/NOT EMPLOYED/RETIRED/STUDENT/OTHER - infer from what the employer does",
    "primaryOccupationOther": "string - Required if primaryOccupation is OTHER, omit otherwise",
    "presentEmployer": {  // Object - Employer where applicant CURRENTLY works (at time of DS-160 submission), NOT the employer they are applying to. Even if same company (renewal/transfer), use CURRENT employer. NOTE: for renewals, the current employer and the one that the person is applying to may be the same since its a RENEWAL
      "name": "string or omit", CRITICAL FOR RENEWALS: MAKE SURE THAT CURRENT EMPLOYER IS THE MOST UP TO DATE CURRENT EMPLOYER FROM THE VISA RENEWAL WORKSHEET, NOT FROM THE ORIGINAL DS160 WORKSHEET
      "address": {
        "street1": "string or omit",
        "street2": "string or omit",
        "city": "string or omit",
        "state": "string or omit",
        "postalCode": "string or omit",
        "country": "string or omit"
      },
      "phone": "string or omit - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
      "startDate": "DD-MMM-YYYY or N/A",
      "monthlyIncome": "string or omit - round to nearest whole number",
      "duties": "string - 3-5 sentences derived from support letter or employment documents",
      "supervisorSurname": "string or omit",
      "supervisorGivenName": "string or omit",
      "jobTitle": "string or omit - job title ONLY do not include description"
    },
    "previousEmployers": [],  // Array: {name: "", address: {street1: "", street2: "", city: "", state: "", postalCode: "", country: ""}, phone: "", startDate: "DD-MMM-YYYY", endDate: "DD-MMM-YYYY", monthlyIncome: "", duties: "", supervisorSurname: "", supervisorGivenName: "", jobTitle: ""} - CRITICAL: FOR RENEWALS, YOU MUST INCLUDE THE PREVIOUS PRESENT EMPLOYER ON THE ORIGINAL DS160 WORKSHEET AS A PREVIOUS EMPLOYER FOR RENEWALS. Also, Extract ALL previous employers from worksheet (e.g., 67.1, 67.2, 67.3, 67.4...). Sort by start date OLDEST FIRST (e.g., 2015-2018 job → 2019-2023 job). See Section 9 for details 
    "education": {
      "institutions": []  // Array: {name: "", address: {street1: "", street2: "", city: "", state: "", postalCode: "", country: ""}, courseOfStudy: "", fromDate: "DD-MMM-YYYY", toDate: "DD-MMM-YYYY"} - CRITICAL: Extract ALL education institutions from worksheet (high school, college, grad school, etc.). Sort by start date OLDEST FIRST (junior high → high school → college → grad school). For study abroad periods, sort by End Date. See Section 9 for details
    },
    "languages": [],  // Array of language names
    "clanTribe": {
      "belongsToClan": false,
      "clanName": "string or omit"
    },
    "countriesVisited": {
      "hasVisited": false,
      "countries": []  // Array of country codes
    },
    "organizationMembership": {
      "hasMembership": false,
      "organizations": []  // Array of organization names
    },
    "specializedSkills": {
      "hasSkills": false,
      "explanation": "string or omit"
    },
    "militaryService": {
      "hasServed": false,
      "details": []  // Array: {country: "3-letter code", branch: "string", rank: "string", specialty: "string", startDate: "DD-MMM-YYYY", endDate: "DD-MMM-YYYY"}
    },
    "insurgentOrganization": {
      "hasInvolvement": false,
      "explanation": "string or omit"
    }
  },

  "security": {
    "part1": {
      "disease": false,
      "diseaseExplain": "string",
      "disorder": false,
      "disorderExplain": "string",
      "drugUser": false,
      "drugUserExplain": "string"
    },
    "part2": {
      "arrested": false,
      "arrestedExplain": "string",
      "controlledSubstances": false,
      "prostitution": false,
      "moneyLaundering": false,
      "humanTrafficking": false,
      "assistedTrafficking": false,
      "traffickingRelated": false
    },
    "part3": {
      "illegalActivity": false,
      "terroristActivity": false,
      "terroristSupport": false,
      "terroristOrg": false,
      "terroristRelated": false,
      "genocide": false,
      "torture": false,
      "extrajudicialViolence": false,
      "childSoldier": false,
      "religiousFreedom": false,
      "populationControls": false,
      "organTransplant": false
    },
    "part4": {
      "immigrationFraud": false,
      "deportation": false,
      "deportationExplain": "string"
    },
    "part5": {
      "childCustody": false,
      "votingViolation": false,
      "renounceExpenses": false
    }
  },

  "temporaryWork": {  // Object - Always include this section even if visa type not specified
    "petitionNumber": "string - Required for all temporary work visa applications",
    "petitionerName": "string",
    "intendedEmployer": {
      "name": "string",
      "address1": "string",
      "address2": "string",
      "city": "string",
      "state": "2-letter state code",
      "zipCode": "string",
      "phone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code"
    },
    "monthlyIncome": "string - Monthly amount, not yearly - round to nearest whole number"
  },

  "crewVisa": {  // Object - Only for C-1/D visa types
    "jobTitle": "string",
    "vesselCompanyName": "string",
    "companyPhone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
    "positionThroughAgency": false,
    "agencyInfo": {
      "name": "string",
      "address": "string",
      "phone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code"
    },
    "vesselWork": false
  },

  // E-VISA SECTIONS - Only include for E-1/E-2 visa applications

  "evisaClassification": {
    "visaType": "E1 or E2",
    "treatyCountry": "3-letter country code",
    "principalApplicant": true,
    "principalName": {
      "surname": "string or omit",
      "givenName": "string or omit"
    }
  },

  "evisaBusiness": {
    "businessName": "string",
    "businessType": "S",
    "businessTypeOther": "string",
    "incorporationDate": "DD-MMM-YYYY",
    "incorporationCity": "string",
    "incorporationState": "2-letter code",
    "incorporationCountry": "USA",
    "businessAddress": {
      "street1": "string",
      "street2": "string",
      "city": "string",
      "state": "string",
      "postalCode": "string",
      "country": "3-letter country code"
    },
    "businessPhone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
    "businessFax": "string",
    "businessEmail": "string",
    "businessWebsite": "string",
    "numberOfEmployees": "string",
    "annualRevenue": "string",
    "businessActivities": "string",
    "percentageForeignOwnership": "string",
    "stockExchangeListed": false,
    "stockExchangeName": "string",
    "offices": [
      {
        "type": "H",
        "typeOther": "string",
        "name": "string",
        "address": {
          "street1": "string",
          "street2": "string",
          "city": "string",
          "state": "string",
          "stateNA": false,
          "postalCode": "string",
          "postalCodeNA": false,
          "country": "3-letter country code"
        }
      }
    ]
  },

  "evisaApplicationContact": {
    "officer": {  // Object - Person to contact if necessary (company officer/principal applicant) - extract from personal.surname and personal.givenName
      "surname":  "string - Applicant/company officer surname",
      "givenName":  "string - Applicant/company officer given name"
      "position": "string - Position (e.g., CEO)"
    },
    "contact": {  // Object - Preparer of form (attorney/paralegal) - use attorney info from E-visa Preparer Information section 
      "surname": "string - Attorney surname (e.g., HIGA)",
      "givenName": "string - Attorney given name (e.g., ERIKO)",
    },
    "address": {
      "street1": "string",
      "street2": "string",
      "city": "string",
      "state": "string",
      "stateNA": false,
      "postalCode": "string",
      "postalCodeNA": false,
      "country": "3-letter country code"
    },
    "phone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
    "fax": "string",
    "faxNA": false,
    "email": "string",
    "emailNA": false
  },

  "evisaOwnership": {
    "owners": [],  // Array: {name: "", nationality: "3-letter code", percentageOwnership: "", position: ""} - Extract ALL business owners from DS-156E Section 11
    "majorityOwnedByTreatyCountry": true,
    "ownershipStructure": "string"
  },

  "evisaFinanceTrade": {
    "yearType": "F or C",
    "yearType2": "F or C",
    "assetsType": "C or H",
    "financialYear": "YYYY",
    "totalAssets": "string",
    "totalLiabilities": "string",
    "ownerEquity": "string",
    "operatingIncomeBeforeTax": "string",
    "operatingIncomeAfterTax": "string",
    "grossInternationalTradeYear": "YYYY",
    "treatyCountryImports": "string",
    "treatyCountryImportTransactions": "string",
    "treatyCountryExports": "string",
    "treatyCountryExportTransactions": "string",
    "thirdCountryImports": "string",
    "thirdCountryImportTransactions": "string",
    "thirdCountryExports": "string",
    "thirdCountryExportTransactions": "string",
    "domesticProductionValue": "string",
    "domesticProductionTransactions": "string",

    "financialStatement": {
      "cash": "string",
      "receivables": "string",
      "inventory": "string",
      "otherCurrentAssets": "string",
      "land": "string",
      "building": "string",
      "machinery": "string",
      "otherPropertyAssets": "string",
      "liabilities": "string",
      "debt": "string",
      "revenues": "string",
      "costs": "string",
      "income": "string",
      "tax": "string"
    },

    "tradeInformation": {
      "goodsSoldValue": "string",
      "exportedValue": "string",
      "principalTradeService": "string",
      "servicesToUSA": "string",
      "importsFromUS": "string",
      "importsFromOther": "string",
      "exportsToUS": "string",
      "exportsToOther": "string",
      "domesticProductionTransactions": "string"
    }
  },

  "evisaEmployeeCounts": {
    "yearType": "F or C",
    "treatyNationals": {
      "managerial": {"thisYear": "string", "nextYear": "string"},
      "specialized": {"thisYear": "string", "nextYear": "string"},
      "other": {"thisYear": "string", "nextYear": "string"}
    },
    "usCitizensLPR": {
      "managerial": {"thisYear": "string", "nextYear": "string"},
      "specialized": {"thisYear": "string", "nextYear": "string"},
      "other": {"thisYear": "string", "nextYear": "string"}
    },
    "thirdCountryNationals": {
      "managerial": {"thisYear": "string", "nextYear": "string"},
      "specialized": {"thisYear": "string", "nextYear": "string"},
      "other": {"thisYear": "string", "nextYear": "string"}
    }
  },

  "evisaUSPersonnel": {
    "personnel": [
      {
        "surname": "string",
        "givenName": "string",
        "position": "string",
        "division": "string",
        "nationality": "3-letter country code",
        "usStatus": "string",
        "usStatusOther": "string",
        "visaType": "string",
        "visaIssueDate": "DD-MMM-YYYY",
        "visaIssuePlace": "string",
        "alienNumber": "string",
        "alienNumberUnknown": false
      }
    ]
  },

  "evisaApplicantPosition": {
    "applicantType": "M",
    "presentPosition": "string (FULL TEXT from DS-156E Section 18)",
    "employerName": "string",
    "yearsWithEmployer": "string",
    "employerAddress": {
      "street1": "string",
      "street2": "string or omit",
      "city": "string",
      "state": "string",
      "postalCode": "string",
      "country": "3-letter code"
    },
    "education": {
      "school": "string",
      "degree": "string",
      "major": "string",
      "year": "string"
    },
    "hasOtherEducation": false,
    "otherEducationExplanation": "string"
  },

  "evisaApplicantUSPosition": {
    "title": "string",
    "duties": "string (FULL TEXT from DS-156E Section 23)",
    "salary": "string",
    "benefits": "string",
    "hasImmediateSubordinates": true,
    "immediateSubordinates": [],  // Array of subordinate names from DS-156E Section 15
    "isReplacingWorker": false,
    "replacedWorker": {
      "name": "string or omit",
      "visaType": "string or omit"
    },
    "willIncreaseStaff": false,
    "continuationOfEmployment": true
  },

  "evisaEmployee": {
    "positionTitle": "string",
    "dutiesDescription": "string",
    "startDate": "DD-MMM-YYYY",
    "yearsExperience": "string",
    "salary": "string",
    "educationLevel": "string",
    "fieldOfStudy": "string",
    "specialQualifications": "string",
    "previousUSEmployment": false,
    "previousEmployer": "string",
    "previousPosition": "string",
    "previousDates": "string"
  },

  "evisaInvestment": {
    "investmentType": "E",
    "fairMarketValue": "string",
    "financialYear": "YYYY",
    "yearType": "C",
    "cashInitial": "string",
    "cashTotal": "string",
    "inventoryInitial": "string",
    "inventoryTotal": "string",
    "equipmentInitial": "string",
    "equipmentTotal": "string",
    "propertyInitial": "string",
    "propertyTotal": "string",
    "otherInitial": "string",
    "otherTotal": "string",
    "sourceOfFunds": "C",
    "fundsFrom": "P",
    "fundsAmount": "string",
    "hasWireTransfers": true,
    "hasBankStatements": true,
    "hasPromissoryNote": false,
    "hasOtherDocs": false
  },

  "evisaForeignBusiness": {
    "hasForeignBusiness": true,
    "hasForeignEntity": true,
    "hasForeignIndividualOwner": false,
    "parentBusiness": {
      "name": "string",
      "address": {
        "street1": "string",
        "street2": "string",
        "city": "string",
        "state": "string",
        "stateNA": false,
        "postalCode": "string",
        "postalCodeNA": false,
        "country": "3-letter country code"
      },
      "phone": "string - No dashes/spaces/parens. US: 1 prefix, no + (e.g., 13107835484). Japan: +81, drop leading 0 (e.g., +819012345678). Other: + with country code",
      "fax": "string"
    },
    "foreignEntities": [
      {
        "name": "string",
        "nationality": "3-letter country code",
        "ownershipPercentage": "string"
      }
    ],
    "foreignOwners": [
      {
        "surname": "string",
        "givenName": "string",
        "status": "string",
        "residenceCountry": "3-letter country code",
        "nationality": "3-letter country code",
        "ownershipPercentage": "string"
      }
    ]
  },

  "evisaFinancial": {
    "currentAssets": "string",
    "fixedAssets": "string",
    "totalAssets": "string",
    "currentLiabilities": "string",
    "longTermLiabilities": "string",
    "totalLiabilities": "string",
    "ownerEquity": "string",
    "netWorth": "string",
    "grossIncome": "string",
    "operatingIncomeBeforeTax": "string",
    "operatingIncomeAfterTax": "string",
    "netIncome": "string",
    "taxYear": "string",
    "financialYear": "string"
  },

  "evisaTrade": {
    "goodsServices": "string",
    "tradeWithUS": true,
    "annualTradeVolume": "string",
    "percentageTradeUS": "string",
    "usCompanies": [
      {
        "name": "string",
        "address": "string",
        "relationship": "string"
      }
    ],
    "importFromUS": false,
    "exportToUS": false,
    "importDescription": "string",
    "exportDescription": "string"
  }
}
```

## DEFAULT VALUES WHEN NOT SPECIFIED:

When documents don't provide specific information, use these defaults:

(All default values have been embedded directly in field descriptions above)

## PLACEHOLDER VALUES vs OMISSION STRATEGY:

When information is not in documents:

**Use Placeholders For:**
- Required date fields: Use "01-JAN-2026" for intendedArrivalDate if not specified
- Required numeric fields: Use "3" for lengthOfStayNumber if cannot infer from visa type
- Required dropdown fields: Use context-appropriate defaults (see field descriptions)

**OMIT Entirely (Do Not Use "N/A" or explanatory text):**
- All false boolean fields
- All explanation fields when corresponding boolean is false
- All conditional fields when condition is not met (e.g., otherTypeExplanation when type is not OTHER)
- Optional fields with no data
- Entire security section if all values are false

## COMPLETE EXAMPLE WITH COMPREHENSIVE SAMPLE DATA

This example shows EVERY SINGLE FIELD populated with realistic sample data. Pay special attention to:
- Example demonstrates all field types - omit entire sections if not applicable
- Company names without punctuation
- Phone numbers with proper formatting (US: 1 prefix no +, Japan: +81 drop leading 0)
- Street addresses with building number first
- Secondary unit designators (APT.701 format)
- Japanese addresses with ward (-ku) in street, city/state without suffixes (-shi, -ken/-fu/-to)
- Spouse maiden name format and place of birth fields
- Proper formatting for all field types
- Complete E-visa sections for E-2 application

```json
{
  "personal": {
    "surname": "NAKAMURA",
    "givenName": "Takeshi",
    "fullNameNative": "中村武志",
    "otherNames": [
      {
        "surname": "YAMAMOTO",
        "givenName": "Takeshi"
      }
    ],
    "gender": "MALE",
    "maritalStatus": "MARRIED",
    "dateOfBirth": "15-MAR-1978",
    "birthCity": "Tokyo",
    "birthState": "Tokyo",
    "birthCountry": "JPN",
    "nationality": "JPN",
    "otherNationalities": ["USA"],
    "nationalId": "123456789012",
    "usSocialSecurity": "123456789",
    "usTaxId": "987654321"
  },

  "travel": {
    "purposeOfTrip": "E",
    "otherPurposeDetail": "E-2",
    "purposeSpecify": "Treaty investor establishing US operations",
    "petitionNumber": "ABC1234567890",
    "principalApplicant": {
      "surname": "NAKAMURA",
      "givenName": "Takeshi",
      "petitionNumber": "ABC1234567890",
      "companyName": "NAKAMURA TRADING USA INC"
    },
    "principalVisaIssued": false,
    "evisaPrincipal": {
      "surname": "NAKAMURA",
      "givenName": "Takeshi",
      "dateOfBirth": "15-MAR-1978"
    },
    "specificTravelPlans": true,
    "intendedArrivalDate": "15-APR-2024",
    "arrivalFlightNumber": "NH006",
    "arrivalCity": "Los Angeles",
    "intendedDepartureDate": "15-APR-2027",
    "departureFlightNumber": "NH005",
    "departureCity": "Los Angeles",
    "lengthOfStay": "3 years",
    "lengthOfStayNumber": "3",
    "lengthOfStayUnit": "Y",
    "usStreetAddress": "1234 Wilshire Blvd.",
    "usStreetAddress2": "STE.567",
    "usCity": "Los Angeles",
    "usState": "California",
    "usZipCode": "90017",
    "tripPayer": "COMPANY",
    "payerInfo": {
      "surname": "SUZUKI",
      "givenName": "Hiroshi",
      "phone": "+81354567890",
      "email": "hsuzuki@nakamuratrading.co.jp",
      "relationship": "Business partner",
      "sameAddress": false,
      "street1": "3-15-2 SHIBUYA, SHIBUYA-KU",
      "street2": "FL.8",
      "city": "TOKYO",
      "state": "TOKYO",
      "postalCode": "150-0002",
      "country": "JPN"
    },
    "companyInfo": {
      "name": "NAKAMURA TRADING USA INC",
      "relationship": "Owned company",
      "street1": "1234 Wilshire Blvd.",
      "street2": "STE.567",
      "city": "Los Angeles",
      "state": "California",
      "zipCode": "90017",
      "country": "USA"
    }
  },

  "travelCompanions": [
    {
      "surname": "NAKAMURA",
      "givenName": "Yuki",
      "relationship": "Spouse"
    },
    {
      "surname": "NAKAMURA",
      "givenName": "Kenta",
      "relationship": "Child"
    }
  ],

  "travelGroup": {
    "traveling": true,
    "name": "Japan Business Delegation 2024"
  },

  "previousTravel": {
    "hasBeenToUS": true,
    "visits": [
      {
        "arrivalDate": "10-JUN-2022",
        "lengthOfStayNumber": "14",
        "lengthOfStayUnit": "D"
      },
      {
        "arrivalDate": "05-SEP-2023",
        "lengthOfStayNumber": "21",
        "lengthOfStayUnit": "D"
      }
    ],
    "driverLicense": {
      "hasLicense": true,
      "licenses": [
        {
          "state": "California",
          "number": "D1234567"
        }
      ]
    },
    "previousVisa": {
      "hasVisa": true,
      "issueDate": "15-MAY-2022",
      "visaNumber": "123456789",
      "sameType": false,
      "sameCountry": true,
      "tenPrinted": true
    }
  },

  "contact": {
    "homeStreet": "2-15-8 ROPPONGI, MINATO-KU",
    "homeApt": "APT.1205",
    "homeCity": "TOKYO",
    "homeState": "TOKYO",
    "homePostalCode": "106-0032",
    "homeCountry": "JPN",
    "mailingAddressSameAsHome": false,
    "mailingAddress": {
      "street": "1-3-5 MARUNOUCHI, CHIYODA-KU",
      "apt": "FL.20",
      "city": "TOKYO",
      "state": "TOKYO",
      "postalCode": "100-0005",
      "country": "JPN"
    },
    "homePhone": "+81354567890",
    "secondaryPhone": "+81901234567",
    "workPhone": "+81332211234",
    "email": "tnakamura@nakamuratrading.co.jp",
    "socialMedia": [
      {
        "platform": "LINKEDIN",
        "handle": "takeshi-nakamura-business"
      },
      {
        "platform": "TWITTER",
        "handle": "tnakamura_tokyo"
      }
    ],
    "additionalEmails": [
      "takeshi.personal@gmail.com",
      "t.nakamura@example.com"
    ]
  },

  "usContact": {
    "contactPerson": {
      "surname": "JOHNSON",
      "givenName": "Michael"
    },
    "organizationName": "CALIFORNIA BUSINESS PARTNERS LLC",
    "relationship": "Business partner and legal representative",
    "address": {
      "street1": "5678 Century Blvd.",
      "street2": "FL.25",
      "city": "Los Angeles",
      "state": "California",
      "zipCode": "90045"
    },
    "phone": "13107654321",
    "email": "mjohnson@californiabusiness.com"
  },

  "passport": {
    "type": "REGULAR",
    "number": "TK9876543",
    "bookNumber": "BK123456",
    "issuingAuthority": "JPN",
    "issueCountry": "JPN",
    "issueCity": "Tokyo",
    "issueState": "Tokyo",
    "issueDate": "20-JAN-2020",
    "expirationDate": "20-JAN-2030",
    "lostPassport": {
      "hasLost": true,
      "number": "TK1111111",
      "country": "JPN",
      "explanation": "Previous passport was lost during travel in 2019, reported to Japanese consulate and replaced"
    }
  },

  "family": {
    "father": {
      "surname": "NAKAMURA",
      "givenName": "Hiroshi",
      "dateOfBirth": "10-APR-1945",
      "inUS": false,
      "status": "Japanese citizen residing in Japan"
    },
    "mother": {
      "surname": "NAKAMURA",
      "givenName": "Sachiko",
      "dateOfBirth": "25-JUN-1950",
      "inUS": false,
      "status": "Japanese citizen residing in Japan"
    },
    "relativesInUS": [
      {
        "surname": "NAKAMURA",
        "givenName": "Ken",
        "relationship": "Cousin",
        "status": "US Permanent Resident"
      },
      {
        "surname": "TANAKA",
        "givenName": "Mary",
        "relationship": "Sister-in-law",
        "status": "US Citizen"
      }
    ],
    "spouse": {
      "surname": "NAKAMURA MAIDEN NAME TANAKA",
      "givenName": "Yuki",
      "dateOfBirth": "22-NOV-1982",
      "nationality": "JPN",
      "city": "Osaka",
      "birthState": "Osaka",
      "country": "JPN",
      "addressType": "SAME_AS_HOME"
    }
  },

  "workEducation": {
    "primaryOccupation": "BUSINESS",
    "presentEmployer": {
      "name": "NAKAMURA TRADING CO LTD",
      "address": {
        "street1": "1-3-5 MARUNOUCHI, CHIYODA-KU",
        "street2": "FL.20",
        "city": "TOKYO",
        "state": "TOKYO",
        "postalCode": "100-0005",
        "country": "JPN"
      },
      "phone": "+81332211234",
      "startDate": "01-APR-2005",
      "monthlyIncome": "2500000",
      "duties": "Chief Executive Officer responsible for overall company strategy, international expansion, and US market development. Manages 150 employees across 5 departments including import-export operations, logistics, and business development.",
      "supervisorSurname": "TANAKA",
      "supervisorGivenName": "Hiroshi",
      "jobTitle": "Chief Executive Officer"
    },
    "previousEmployers": [
      {
        "name": "MITSUBISHI CORPORATION",
        "address": {
          "street1": "3-1-1 MARUNOUCHI, CHIYODA-KU",
          "street2": "",
          "city": "TOKYO",
          "state": "TOKYO",
          "postalCode": "100-8086",
          "country": "JPN"
        },
        "phone": "+81332101111",
        "startDate": "01-APR-2000",
        "endDate": "31-MAR-2005",
        "monthlyIncome": "800000",
        "duties": "Senior Manager in International Business Division, handled US market analysis and partnership development",
        "supervisorSurname": "SUZUKI",
        "supervisorGivenName": "Kenji",
        "jobTitle": "Senior Manager"
      }
    ],
    "education": {
      "institutions": [
        {
          "name": "UNIVERSITY OF TOKYO",
          "address": {
            "street1": "7-3-1 HONGO, BUNKYO-KU",
            "city": "TOKYO",
            "state": "TOKYO",
            "postalCode": "113-0033",
            "country": "JPN"
          },
          "courseOfStudy": "Economics",
          "fromDate": "01-APR-1996",
          "toDate": "31-MAR-2000"
        }
      ]
    },
    "languages": ["Japanese", "English", "Mandarin Chinese"],
    "countriesVisited": {
      "hasVisited": true,
      "countries": ["USA", "CHN", "KOR", "THA", "SGP"]
    },
    "organizationMembership": {
      "hasMembership": true,
      "organizations": [
        "Japan Business Federation",
        "Tokyo Chamber of Commerce and Industry"
      ]
    }
  },

  "temporaryWork": {
    "petitionNumber": "ABC1234567890",
    "petitionerName": "NAKAMURA TRADING USA INC",
    "intendedEmployer": {
      "name": "NAKAMURA TRADING USA INC",
      "address1": "1234 Wilshire Blvd.",
      "address2": "STE.567",
      "city": "Los Angeles",
      "state": "California",
      "zipCode": "90017",
      "phone": "13107654321"
    },
    "monthlyIncome": "25000"
  },

  "evisaClassification": {
    "visaType": "E2",
    "treatyCountry": "JPN",
    "principalApplicant": true,
    "principalName": {
      "surname": "NAKAMURA",
      "givenName": "Takeshi"
    }
  },

  "evisaBusiness": {
    "businessName": "NAKAMURA TRADING USA INC",
    "businessType": "S",
    "businessTypeOther": "Import-export and wholesale trading company",
    "incorporationDate": "15-JAN-2024",
    "incorporationCity": "Los Angeles",
    "incorporationState": "California",
    "incorporationCountry": "USA",
    "businessAddress": {
      "street1": "1234 Wilshire Blvd.",
      "street2": "STE.567",
      "city": "Los Angeles",
      "state": "California",
      "postalCode": "90017",
      "country": "USA"
    },
    "businessPhone": "13107654321",
    "businessFax": "13107654322",
    "businessEmail": "info@nakamuratrading.com",
    "businessWebsite": "www.nakamuratrading.com",
    "numberOfEmployees": "25",
    "annualRevenue": "15000000",
    "businessActivities": "Import and distribution of Japanese consumer goods",
    "percentageForeignOwnership": "75"
  },

  "evisaApplicationContact": {
    "officer": {
      "surname": "NAKAMURA",
      "givenName": "TAKESHI",
      "position": "CEO"
    },
    "contact": {
      "surname": "HIGA",
      "givenName": "ERIKO"
    },
    "address": {
      "street1": "11835 W. OLYMPIC BLVD.",
      "street2": "STE.355E",
      "city": "LOS ANGELES",
      "state": "California",
      "postalCode": "90064",
      "country": "USA"
    },
    "phone": "13103246890",
    "fax": "13103246902",
    "email": "erikohiga@tomitalawoffice.net"
  },

  "evisaOwnership": {
    "owners": [
      {
        "name": "NAKAMURA TAKESHI",
        "nationality": "JPN",
        "percentageOwnership": "75",
        "position": "Chief Executive Officer"
      }
    ],
    "majorityOwnedByTreatyCountry": true,
    "ownershipStructure": "75% owned by Japanese national Takeshi Nakamura"
  }
}
```

## ADDITIONAL RULES:

- Do not fabricate information, but use logical inference based on source documents and visa knowledge
- Always include temporaryWork section for work-based visas (H/L/O/P/Q/R)
- Extract what you can from documents, mark missing required fields clearly
- Omit security section entirely if all answers are false
- Use exact passport name formatting (typically all caps)
- Numeric values as strings (e.g., "250" not 250)
- Keep empty arrays [] when no items exist
- Keep false for boolean fields
- The extension automatically defaults missing boolean fields to false
- Therefore, omit all false boolean fields to reduce JSON size
- Only include fields that are true or have actual values

### Conditional Requirements:
- If maritalStatus="MARRIED": spouse information required
- If hasBeenToUS=true: previous visit details required
- If primaryOccupation!="NOT EMPLOYED": employer details required
- If primaryOccupation="OTHER": primaryOccupationOther required (OMIT if primaryOccupation is any other value)
- If passport.type="OTHER": otherTypeExplanation required (OMIT if type is REGULAR/OFFICIAL/DIPLOMATIC)
- If boolean field is false: OMIT corresponding explanation field (e.g., omit lostExplanation when lost=false)

### E-visa Requirements (E-1/E-2):
- Include all evisa sections from DS-156E form
- Extract full text from DS-156E Sections 18 and 23 (don't summarize)
- Include evisaApplicationContact from DS-156E Sections 26 and 27
- Include evisaInvestment for E-2 visas
- Include evisaTrade for E-1 visas only
